# Environment Variables for UK Sports TV Guide - Real Data Edition
# Copy this file to .env and fill in your actual API keys

# ========================================
# REQUIRED - UFC Data Sources
# ========================================

# Google Custom Search API for UFC event data
# Get from: https://console.cloud.google.com/apis/credentials
GOOGLE_API_KEY=your_google_api_key_here

# Custom Search Engine ID for UFC searches  
# Set up at: https://cse.google.com/
SEARCH_ENGINE_ID=your_search_engine_id_here

# ========================================
# OPTIONAL - Enhanced Football Data Sources
# ========================================

# Football-Data.org API (free tier available)
# Register at: https://www.football-data.org/client/register
# Covers: Premier League, Championship, Champions League, etc.
FOOTBALL_DATA_API_KEY=your_football_data_api_key_here

# API-Football (alternative football source)
# Register at: https://www.api-football.com/
# Comprehensive worldwide football data
API_FOOTBALL_KEY=your_api_football_key_here

# ========================================
# OPTIONAL - Additional Configuration
# ========================================

# Application environment
NODE_ENV=production

# Enable/disable real data validation
REAL_DATA_ONLY=true

# Debug mode (set to 'true' for detailed logging)
DEBUG_MODE=false

# Cache duration in minutes
CACHE_DURATION_FOOTBALL=15
CACHE_DURATION_UFC=30

# Request timeout in milliseconds
REQUEST_TIMEOUT=30000

# ========================================
# SETUP INSTRUCTIONS
# ========================================

# 1. GOOGLE CUSTOM SEARCH (Required for UFC data):
#    - Go to https://console.cloud.google.com/
#    - Create a new project or select existing
#    - Enable "Custom Search API"
#    - Create API Key under Credentials
#    - Go to https://cse.google.com/
#    - Create a new Custom Search Engine
#    - Set to search "Entire web"
#    - Add UFC-related sites (ufc.com, sherdog.com, etc.)
#    - Copy the Search Engine ID

# 2. FOOTBALL-DATA.ORG (Optional but recommended):
#    - Visit https://www.football-data.org/client/register
#    - Register for free account
#    - Copy API key from dashboard
#    - Free tier: 10 requests/minute, covers major leagues

# 3. API-FOOTBALL (Alternative football source):
#    - Visit https://www.api-football.com/
#    - Register for account
#    - Get API key from dashboard
#    - Free tier: 100 requests/day

# ========================================
# NETLIFY DEPLOYMENT
# ========================================

# When deploying to Netlify, add these environment variables
# in your Netlify dashboard under:
# Site settings > Environment variables

# Required for UFC functionality:
# - GOOGLE_API_KEY
# - SEARCH_ENGINE_ID

# Optional for enhanced football data:
# - FOOTBALL_DATA_API_KEY
# - API_FOOTBALL_KEY

# ========================================
# LOCAL DEVELOPMENT
# ========================================

# For local development, create a .env file with:
# 1. Copy this file to .env
# 2. Fill in your actual API keys
# 3. Remove the "_here" suffix from variable names
# 4. Keep .env file private (it's in .gitignore)

# Without API keys, the app will still work but with limited data sources:
# - Football: Web scraping from live-footballontv.com
# - UFC: Basic UFC.com scraping (may be limited)

# ========================================
# TROUBLESHOOTING
# ========================================

# If UFC data is not appearing:
# 1. Check GOOGLE_API_KEY is valid
# 2. Verify SEARCH_ENGINE_ID is correct
# 3. Ensure Google Custom Search API is enabled
# 4. Check API quota limits

# If football data is limited:
# 1. Add FOOTBALL_DATA_API_KEY for more sources
# 2. Check if live-footballontv.com is accessible
# 3. Verify API key permissions

# For more help, see:
# - REAL_DATA_IMPLEMENTATION.md
# - DEPLOYMENT_CHECKLIST.md
# - test-real-data.html (for testing)

# ========================================
# SECURITY NOTES
# ========================================

# - Never commit .env file to git
# - Keep API keys secure and private
# - Regenerate keys if accidentally exposed
# - Use different keys for development and production
# - Monitor API usage to detect unauthorized access